// This code conforms with the UFC specification version 2016.2.0
// and was automatically generated by FFC version 2016.2.0.
// 
// This code was generated with the following parameters:
// 
//   convert_exceptions_to_warnings: False
//   cpp_optimize:                   True
//   cpp_optimize_flags:             '-O2'
//   epsilon:                        1e-14
//   error_control:                  False
//   form_postfix:                   False
//   format:                         'ufc'
//   max_signature_length:           0
//   no-evaluate_basis_derivatives:  True
//   optimize:                       False
//   precision:                      15
//   quadrature_degree:              -1
//   quadrature_rule:                'auto'
//   representation:                 'auto'
//   split:                          False

#include "ffc_form_81eb204e861bf1e571ab148888289af245a7a254.h"

// Based on https://gcc.gnu.org/wiki/Visibility
#if defined _WIN32 || defined __CYGWIN__
    #ifdef __GNUC__
        #define DLL_EXPORT __attribute__ ((dllexport))
    #else
        #define DLL_EXPORT __declspec(dllexport)
    #endif
#else
    #define DLL_EXPORT __attribute__ ((visibility ("default")))
#endif

ffc_form_81eb204e861bf1e571ab148888289af245a7a254_cell_integral_main_otherwise::ffc_form_81eb204e861bf1e571ab148888289af245a7a254_cell_integral_main_otherwise() : ufc::cell_integral()
{
    
}

ffc_form_81eb204e861bf1e571ab148888289af245a7a254_cell_integral_main_otherwise::~ffc_form_81eb204e861bf1e571ab148888289af245a7a254_cell_integral_main_otherwise()
{
    
}

const std::vector<bool> & ffc_form_81eb204e861bf1e571ab148888289af245a7a254_cell_integral_main_otherwise::enabled_coefficients() const
{
    static const std::vector<bool> enabled({true, true});
    return enabled;
}

void ffc_form_81eb204e861bf1e571ab148888289af245a7a254_cell_integral_main_otherwise::tabulate_tensor(double * A,
                                    const double * const * w,
                                    const double * coordinate_dofs,
                                    int cell_orientation) const
{
    // This function was generated using 'quadrature' representation
    // with the following integrals metadata:
    // 
    //   num_cells:         None
    //   quadrature_degree: 5
    //   quadrature_rule:   'default'
    //   representation:    'quadrature'
    // 
    // and the following integral 0 metadata:
    // 
    //   estimated_polynomial_degree: 5
    //   quadrature_degree:           5
    //   quadrature_rule:             'default'
    //   representation:              'quadrature'
    
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    // Set scale factor
    const double det = std::abs(detJ);
    
    // Compute cell volume
    
    
    // Compute circumradius of triangle in 2D
    
    
    // Array of quadrature weights.
    static const double W7[7] = {0.1125, 0.0629695902724136, 0.0629695902724136, 0.0629695902724136, 0.0661970763942531, 0.0661970763942531, 0.0661970763942531};
    // Quadrature points on the UFC reference element: (0.333333333333333, 0.333333333333333), (0.797426985353087, 0.101286507323456), (0.101286507323456, 0.797426985353087), (0.101286507323456, 0.101286507323456), (0.0597158717897698, 0.470142064105115), (0.470142064105115, 0.0597158717897698), (0.470142064105115, 0.470142064105115)
    
    // Values of basis functions at quadrature points.
    static const double FE0_C0[7][21] = \
    {{-0.111111111111111, -0.111111111111111, -0.111111111111111, 0.444444444444444, 0.444444444444444, 0.444444444444445, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0807685941918872, 0.474352608585538, -0.0807685941918872, 0.323074376767549, 0.0410358262631382, 0.323074376767549, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0807685941918872, -0.0807685941918872, 0.474352608585538, 0.323074376767549, 0.323074376767549, 0.0410358262631385, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.474352608585539, -0.0807685941918871, -0.0807685941918872, 0.0410358262631383, 0.323074376767549, 0.323074376767549, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0280749432230787, -0.0525839011025454, -0.0280749432230788, 0.112299772892315, 0.884134241764072, 0.112299772892315, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0280749432230787, -0.0280749432230788, -0.0525839011025453, 0.112299772892315, 0.112299772892315, 0.884134241764073, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0525839011025453, -0.0280749432230788, -0.0280749432230788, 0.884134241764072, 0.112299772892315, 0.112299772892315, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C0_D01[7][21] = \
    {{-0.333333333333338, 0.0, 0.333333333333335, 1.33333333333332, 0.0, -1.33333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.594853970706169, 0.0, -0.594853970706174, 3.18970794141234, 1.17187593902012e-14, -3.18970794141235, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.594853970706169, 0.0, 2.18970794141235, 0.40514602929381, -2.78456191211851, -0.405146029293824, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.18970794141235, 0.0, -0.594853970706174, 0.405146029293815, 2.78456191211853, -0.405146029293824, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.880568256420466, 0.0, 0.880568256420462, 0.238863487159067, 0.0, -0.238863487159079, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.880568256420465, 0.0, -0.761136512840921, 1.88056825642045, 1.64170476926139, -1.88056825642046, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.761136512840915, 0.0, 0.880568256420462, 1.88056825642044, -1.64170476926137, -1.88056825642046, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C0_D10[7][21] = \
    {{-0.333333333333333, 0.333333333333333, 0.0, 1.33333333333333, -1.33333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.594853970706176, 2.18970794141235, 0.0, 0.405146029293824, -0.405146029293824, -2.78456191211852, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.594853970706174, -0.594853970706175, 0.0, 3.18970794141234, -3.18970794141234, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.18970794141235, -0.594853970706178, 0.0, 0.405146029293824, -0.405146029293824, 2.78456191211853, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.880568256420461, -0.761136512840922, 0.0, 1.88056825642046, -1.88056825642046, 1.64170476926138, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.880568256420459, 0.880568256420459, 0.0, 0.238863487159078, -0.238863487159078, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.761136512840921, 0.88056825642046, 0.0, 1.88056825642046, -1.88056825642046, -1.64170476926138, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C1[7][21] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.111111111111111, -0.111111111111111, -0.111111111111111, 0.444444444444444, 0.444444444444444, 0.444444444444445, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0807685941918872, 0.474352608585538, -0.0807685941918872, 0.323074376767549, 0.0410358262631382, 0.323074376767549, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0807685941918872, -0.0807685941918872, 0.474352608585538, 0.323074376767549, 0.323074376767549, 0.0410358262631385, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.474352608585539, -0.0807685941918871, -0.0807685941918872, 0.0410358262631383, 0.323074376767549, 0.323074376767549, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0280749432230787, -0.0525839011025454, -0.0280749432230788, 0.112299772892315, 0.884134241764072, 0.112299772892315, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0280749432230787, -0.0280749432230788, -0.0525839011025453, 0.112299772892315, 0.112299772892315, 0.884134241764073, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0525839011025453, -0.0280749432230788, -0.0280749432230788, 0.884134241764072, 0.112299772892315, 0.112299772892315, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C1_D01[7][21] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.333333333333338, 0.0, 0.333333333333335, 1.33333333333332, 0.0, -1.33333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.594853970706169, 0.0, -0.594853970706174, 3.18970794141234, 1.17187593902012e-14, -3.18970794141235, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.594853970706169, 0.0, 2.18970794141235, 0.40514602929381, -2.78456191211851, -0.405146029293824, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.18970794141235, 0.0, -0.594853970706174, 0.405146029293815, 2.78456191211853, -0.405146029293824, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.880568256420466, 0.0, 0.880568256420462, 0.238863487159067, 0.0, -0.238863487159079, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.880568256420465, 0.0, -0.761136512840921, 1.88056825642045, 1.64170476926139, -1.88056825642046, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.761136512840915, 0.0, 0.880568256420462, 1.88056825642044, -1.64170476926137, -1.88056825642046, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C1_D10[7][21] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.333333333333333, 0.333333333333333, 0.0, 1.33333333333333, -1.33333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.594853970706176, 2.18970794141235, 0.0, 0.405146029293824, -0.405146029293824, -2.78456191211852, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.594853970706174, -0.594853970706175, 0.0, 3.18970794141234, -3.18970794141234, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.18970794141235, -0.594853970706178, 0.0, 0.405146029293824, -0.405146029293824, 2.78456191211853, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.880568256420461, -0.761136512840922, 0.0, 1.88056825642046, -1.88056825642046, 1.64170476926138, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.880568256420459, 0.880568256420459, 0.0, 0.238863487159078, -0.238863487159078, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.761136512840921, 0.88056825642046, 0.0, 1.88056825642046, -1.88056825642046, -1.64170476926138, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C2[7][21] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.333333333333333, 0.333333333333333, 0.333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.101286507323456, 0.797426985353087, 0.101286507323456, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.101286507323457, 0.101286507323456, 0.797426985353087, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.797426985353087, 0.101286507323456, 0.101286507323456, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.470142064105115, 0.0597158717897698, 0.470142064105115, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.470142064105115, 0.470142064105115, 0.0597158717897697, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0597158717897699, 0.470142064105115, 0.470142064105115, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C3[7][21] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.333333333333333, 0.333333333333333, 0.666666666666667, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.101286507323456, 0.101286507323456, 0.898713492676544, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.797426985353087, 0.797426985353087, 0.202573014646913, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.101286507323456, 0.101286507323456, 0.898713492676544, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.470142064105115, 0.470142064105115, 0.529857935894885, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0597158717897698, 0.0597158717897698, 0.94028412821023, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.470142064105115, 0.470142064105115, 0.529857935894885, 0.0, 0.0, 0.0}};
    
    static const double FE0_C3_D01[7][21] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1.0, -1.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1.0, -1.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1.0, -1.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1.0, -1.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1.0, -1.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1.0, -1.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1.0, -1.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C3_D10[7][21] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C4[7][21] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.333333333333333, 0.666666666666667, 0.333333333333333, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.797426985353087, 0.202573014646913, 0.797426985353087, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.101286507323456, 0.898713492676544, 0.101286507323456, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.101286507323456, 0.898713492676544, 0.101286507323456, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0597158717897697, 0.94028412821023, 0.0597158717897698, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.470142064105115, 0.529857935894885, 0.470142064105115, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.470142064105115, 0.529857935894885, 0.470142064105115, 0.0, 0.0, 0.0}};
    
    static const double FE0_C4_D10[7][21] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.999999999999999, -0.999999999999999, 1.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.999999999999999, -0.999999999999999, 1.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.999999999999999, -0.999999999999999, 1.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.999999999999999, -0.999999999999999, 1.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.999999999999999, -0.999999999999999, 1.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.999999999999999, -0.999999999999999, 1.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.999999999999999, -0.999999999999999, 1.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_C5_D01[7][21] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 1.0}};
    
    static const double FE0_C5_D10[7][21] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.999999999999999, 0.999999999999999, 0.0}};
    
    static const double FE1_C0[7][3] = \
    {{-0.333333333333333, 0.333333333333333, 0.666666666666667},
    {-0.101286507323456, 0.101286507323456, 0.898713492676544},
    {-0.797426985353087, 0.797426985353087, 0.202573014646913},
    {-0.101286507323456, 0.101286507323456, 0.898713492676544},
    {-0.470142064105115, 0.470142064105115, 0.529857935894885},
    {-0.0597158717897698, 0.0597158717897698, 0.94028412821023},
    {-0.470142064105115, 0.470142064105115, 0.529857935894885}};
    
    static const double FE1_C0_D01[7][3] = \
    {{-1.0, 1.0, -1.0},
    {-1.0, 1.0, -1.0},
    {-1.0, 1.0, -1.0},
    {-1.0, 1.0, -1.0},
    {-1.0, 1.0, -1.0},
    {-1.0, 1.0, -1.0},
    {-1.0, 1.0, -1.0}};
    
    static const double FE1_C0_D10[7][3] = \
    {{0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0}};
    
    static const double FE1_C1[7][3] = \
    {{0.333333333333333, 0.666666666666667, 0.333333333333333},
    {0.797426985353087, 0.202573014646913, 0.797426985353087},
    {0.101286507323456, 0.898713492676544, 0.101286507323456},
    {0.101286507323456, 0.898713492676544, 0.101286507323456},
    {0.0597158717897697, 0.94028412821023, 0.0597158717897698},
    {0.470142064105115, 0.529857935894885, 0.470142064105115},
    {0.470142064105115, 0.529857935894885, 0.470142064105115}};
    
    static const double FE1_C1_D10[7][3] = \
    {{0.999999999999999, -0.999999999999999, 1.0},
    {0.999999999999999, -0.999999999999999, 1.0},
    {0.999999999999999, -0.999999999999999, 1.0},
    {0.999999999999999, -0.999999999999999, 1.0},
    {0.999999999999999, -0.999999999999999, 1.0},
    {0.999999999999999, -0.999999999999999, 1.0},
    {0.999999999999999, -0.999999999999999, 1.0}};
    
    static const double FE3_C0[7][12] = \
    {{-0.111111111111111, -0.111111111111111, -0.111111111111111, 0.444444444444444, 0.444444444444444, 0.444444444444445, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0807685941918872, 0.474352608585538, -0.0807685941918872, 0.323074376767549, 0.0410358262631382, 0.323074376767549, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0807685941918872, -0.0807685941918872, 0.474352608585538, 0.323074376767549, 0.323074376767549, 0.0410358262631385, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.474352608585539, -0.0807685941918871, -0.0807685941918872, 0.0410358262631383, 0.323074376767549, 0.323074376767549, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0280749432230787, -0.0525839011025454, -0.0280749432230788, 0.112299772892315, 0.884134241764072, 0.112299772892315, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0280749432230787, -0.0280749432230788, -0.0525839011025453, 0.112299772892315, 0.112299772892315, 0.884134241764073, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0525839011025453, -0.0280749432230788, -0.0280749432230788, 0.884134241764072, 0.112299772892315, 0.112299772892315, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE3_C0_D01[7][12] = \
    {{-0.333333333333338, 0.0, 0.333333333333335, 1.33333333333332, 0.0, -1.33333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.594853970706169, 0.0, -0.594853970706174, 3.18970794141234, 1.17187593902012e-14, -3.18970794141235, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.594853970706169, 0.0, 2.18970794141235, 0.40514602929381, -2.78456191211851, -0.405146029293824, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.18970794141235, 0.0, -0.594853970706174, 0.405146029293815, 2.78456191211853, -0.405146029293824, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.880568256420466, 0.0, 0.880568256420462, 0.238863487159067, 0.0, -0.238863487159079, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.880568256420465, 0.0, -0.761136512840921, 1.88056825642045, 1.64170476926139, -1.88056825642046, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.761136512840915, 0.0, 0.880568256420462, 1.88056825642044, -1.64170476926137, -1.88056825642046, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE3_C0_D10[7][12] = \
    {{-0.333333333333333, 0.333333333333333, 0.0, 1.33333333333333, -1.33333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.594853970706176, 2.18970794141235, 0.0, 0.405146029293824, -0.405146029293824, -2.78456191211852, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.594853970706174, -0.594853970706175, 0.0, 3.18970794141234, -3.18970794141234, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-2.18970794141235, -0.594853970706178, 0.0, 0.405146029293824, -0.405146029293824, 2.78456191211853, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.880568256420461, -0.761136512840922, 0.0, 1.88056825642046, -1.88056825642046, 1.64170476926138, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.880568256420459, 0.880568256420459, 0.0, 0.238863487159078, -0.238863487159078, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.761136512840921, 0.88056825642046, 0.0, 1.88056825642046, -1.88056825642046, -1.64170476926138, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE3_C1[7][12] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.111111111111111, -0.111111111111111, -0.111111111111111, 0.444444444444444, 0.444444444444444, 0.444444444444445},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0807685941918872, 0.474352608585538, -0.0807685941918872, 0.323074376767549, 0.0410358262631382, 0.323074376767549},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0807685941918872, -0.0807685941918872, 0.474352608585538, 0.323074376767549, 0.323074376767549, 0.0410358262631385},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.474352608585539, -0.0807685941918871, -0.0807685941918872, 0.0410358262631383, 0.323074376767549, 0.323074376767549},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0280749432230787, -0.0525839011025454, -0.0280749432230788, 0.112299772892315, 0.884134241764072, 0.112299772892315},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0280749432230787, -0.0280749432230788, -0.0525839011025453, 0.112299772892315, 0.112299772892315, 0.884134241764073},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0525839011025453, -0.0280749432230788, -0.0280749432230788, 0.884134241764072, 0.112299772892315, 0.112299772892315}};
    
    static const double FE3_C1_D01[7][12] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.333333333333338, 0.0, 0.333333333333335, 1.33333333333332, 0.0, -1.33333333333333},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.594853970706169, 0.0, -0.594853970706174, 3.18970794141234, 1.17187593902012e-14, -3.18970794141235},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.594853970706169, 0.0, 2.18970794141235, 0.40514602929381, -2.78456191211851, -0.405146029293824},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.18970794141235, 0.0, -0.594853970706174, 0.405146029293815, 2.78456191211853, -0.405146029293824},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.880568256420466, 0.0, 0.880568256420462, 0.238863487159067, 0.0, -0.238863487159079},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.880568256420465, 0.0, -0.761136512840921, 1.88056825642045, 1.64170476926139, -1.88056825642046},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.761136512840915, 0.0, 0.880568256420462, 1.88056825642044, -1.64170476926137, -1.88056825642046}};
    
    static const double FE3_C1_D10[7][12] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.333333333333333, 0.333333333333333, 0.0, 1.33333333333333, -1.33333333333333, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.594853970706176, 2.18970794141235, 0.0, 0.405146029293824, -0.405146029293824, -2.78456191211852},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.594853970706174, -0.594853970706175, 0.0, 3.18970794141234, -3.18970794141234, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -2.18970794141235, -0.594853970706178, 0.0, 0.405146029293824, -0.405146029293824, 2.78456191211853},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.880568256420461, -0.761136512840922, 0.0, 1.88056825642046, -1.88056825642046, 1.64170476926138},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.880568256420459, 0.880568256420459, 0.0, 0.238863487159078, -0.238863487159078, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.761136512840921, 0.88056825642046, 0.0, 1.88056825642046, -1.88056825642046, -1.64170476926138}};
    
    // Reset values in the element tensor.
    for (unsigned int r = 0; r < 441; r++)
    {
      A[r] = 0.0;
    } // end loop over 'r'
    
    // Compute element tensor using UFL quadrature representation
    // Optimisations: ('eliminate zeros', False), ('ignore ones', False), ('ignore zero tables', False), ('optimisation', False), ('remove zero terms', False)
    
    // Loop quadrature points for integral.
    // Number of operations to compute element tensor for following IP loop = 1090929
    for (unsigned int ip = 0; ip < 7; ip++)
    {
      
      // Coefficient declarations.
      double F0 = 0.0;
      double F1 = 0.0;
      double F2 = 0.0;
      double F3 = 0.0;
      double F4 = 0.0;
      double F5 = 0.0;
      double F6 = 0.0;
      double F7 = 0.0;
      double F8 = 0.0;
      double F9 = 0.0;
      double F10 = 0.0;
      
      // Total number of operations to compute function values = 30
      for (unsigned int r = 0; r < 3; r++)
      {
        F0 += FE1_C0[ip][r]*w[1][r];
        F1 += FE1_C1[ip][r]*w[1][r];
        F2 += FE1_C0_D10[ip][r]*w[1][r];
        F3 += FE1_C1_D10[ip][r]*w[1][r];
        F4 += FE1_C0_D01[ip][r]*w[1][r];
      } // end loop over 'r'
      
      // Total number of operations to compute function values = 144
      for (unsigned int r = 0; r < 12; r++)
      {
        F5 += FE3_C0[ip][r]*w[0][r];
        F6 += FE3_C1[ip][r]*w[0][r];
        F7 += FE3_C0_D10[ip][r]*w[0][r];
        F8 += FE3_C0_D01[ip][r]*w[0][r];
        F9 += FE3_C1_D10[ip][r]*w[0][r];
        F10 += FE3_C1_D01[ip][r]*w[0][r];
      } // end loop over 'r'
      
      // Number of operations for primary indices: 155673
      for (unsigned int j = 0; j < 21; j++)
      {
        for (unsigned int k = 0; k < 21; k++)
        {
          // Number of operations to compute entry: 353
          A[j*21 + k] += (((((((((((((((((K[1]*K[0]*FE0_C3_D10[ip][j] + K[1]*K[2]*FE0_C4_D10[ip][j] + K[3]*K[0]*FE0_C3_D01[ip][j] + K[3]*K[2]*FE0_C3_D10[ip][j]))*(-1.0) + (K[0]*K[1]*FE0_C3_D10[ip][j] + K[0]*K[3]*FE0_C4_D10[ip][j] + K[2]*K[1]*FE0_C3_D01[ip][j] + K[2]*K[3]*FE0_C3_D10[ip][j])))*((((K[1]*K[0]*FE0_C3_D10[ip][k] + K[1]*K[2]*FE0_C4_D10[ip][k] + K[3]*K[0]*FE0_C3_D01[ip][k] + K[3]*K[2]*FE0_C3_D10[ip][k]))*(-1.0) + (K[0]*K[1]*FE0_C3_D10[ip][k] + K[0]*K[3]*FE0_C4_D10[ip][k] + K[2]*K[1]*FE0_C3_D01[ip][k] + K[2]*K[3]*FE0_C3_D10[ip][k]))))*10.0 + (((((K[1]*K[0]*FE0_C3_D10[ip][k] + K[1]*K[2]*FE0_C4_D10[ip][k] + K[3]*K[0]*FE0_C3_D01[ip][k] + K[3]*K[2]*FE0_C3_D10[ip][k]))*(-1.0) + (K[0]*K[1]*FE0_C3_D10[ip][k] + K[0]*K[3]*FE0_C4_D10[ip][k] + K[2]*K[1]*FE0_C3_D01[ip][k] + K[2]*K[3]*FE0_C3_D10[ip][k])))*(((FE0_C1[ip][j]*((K[0]*F0 + K[2]*F1)))*(-1.0) + FE0_C0[ip][j]*((K[1]*F0 + K[3]*F1)))) + (((FE0_C1[ip][j]*((K[0]*FE0_C3[ip][k] + K[2]*FE0_C4[ip][k])))*(-1.0) + FE0_C0[ip][j]*((K[1]*FE0_C3[ip][k] + K[3]*FE0_C4[ip][k]))))*(((-1.0)*((K[1]*K[0]*F2 + K[1]*K[2]*F3 + K[3]*K[0]*F4 + K[3]*K[2]*F2)) + (K[0]*K[1]*F2 + K[0]*K[3]*F3 + K[2]*K[1]*F4 + K[2]*K[3]*F2))))) + ((((K[1]*K[0]*FE0_C3_D10[ip][j] + K[1]*K[2]*FE0_C4_D10[ip][j] + K[3]*K[0]*FE0_C3_D01[ip][j] + K[3]*K[2]*FE0_C3_D10[ip][j]))*(-1.0) + (K[0]*K[1]*FE0_C3_D10[ip][j] + K[0]*K[3]*FE0_C4_D10[ip][j] + K[2]*K[1]*FE0_C3_D01[ip][j] + K[2]*K[3]*FE0_C3_D10[ip][j])))*((((FE0_C1[ip][k]*((K[0]*F0 + K[2]*F1)))*(-1.0) + FE0_C0[ip][k]*((K[1]*F0 + K[3]*F1))))*(-1.0))) + ((((K[1]*K[0]*FE0_C3_D10[ip][j] + K[1]*K[2]*FE0_C4_D10[ip][j] + K[3]*K[0]*FE0_C3_D01[ip][j] + K[3]*K[2]*FE0_C3_D10[ip][j]))*(-1.0) + (K[0]*K[1]*FE0_C3_D10[ip][j] + K[0]*K[3]*FE0_C4_D10[ip][j] + K[2]*K[1]*FE0_C3_D01[ip][j] + K[2]*K[3]*FE0_C3_D10[ip][j])))*((((((K[0]*FE0_C3[ip][k] + K[2]*FE0_C4[ip][k]))*F6)*(-1.0) + ((K[1]*FE0_C3[ip][k] + K[3]*FE0_C4[ip][k]))*F5))*(-1.0))) + FE0_C2[ip][k]*((((K[0]*FE0_C0_D10[ip][j] + K[2]*FE0_C0_D01[ip][j]) + (K[1]*FE0_C1_D10[ip][j] + K[3]*FE0_C1_D01[ip][j])))*(-1.0))) + FE0_C2[ip][j]*((((K[0]*FE0_C0_D10[ip][k] + K[2]*FE0_C0_D01[ip][k]) + (K[1]*FE0_C1_D10[ip][k] + K[3]*FE0_C1_D01[ip][k])))*(-1.0))) + ((FE0_C0[ip][j]*FE0_C0[ip][k] + FE0_C1[ip][j]*FE0_C1[ip][k]))*(0.5*(((K[0]*F7 + K[2]*F8) + (K[1]*F9 + K[3]*F10))))) + ((((K[0]*FE0_C0_D10[ip][k] + K[2]*FE0_C0_D01[ip][k]) + (K[1]*FE0_C1_D10[ip][k] + K[3]*FE0_C1_D01[ip][k])))*0.5)*((FE0_C0[ip][j]*F5 + FE0_C1[ip][j]*F6))) + (((K[0]*FE0_C5_D10[ip][k] + K[2]*FE0_C5_D01[ip][k]))*((K[0]*FE0_C3[ip][j] + K[2]*FE0_C4[ip][j])) + ((K[1]*FE0_C5_D10[ip][k] + K[3]*FE0_C5_D01[ip][k]))*((K[1]*FE0_C3[ip][j] + K[3]*FE0_C4[ip][j])))) + (((K[0]*FE0_C5_D10[ip][j] + K[2]*FE0_C5_D01[ip][j]))*((K[0]*FE0_C3[ip][k] + K[2]*FE0_C4[ip][k])) + ((K[1]*FE0_C5_D10[ip][j] + K[3]*FE0_C5_D01[ip][j]))*((K[1]*FE0_C3[ip][k] + K[3]*FE0_C4[ip][k])))) + (FE0_C0[ip][j]*((((K[0]*FE0_C0_D10[ip][k] + K[2]*FE0_C0_D01[ip][k]))*F5 + ((K[1]*FE0_C0_D10[ip][k] + K[3]*FE0_C0_D01[ip][k]))*F6)) + FE0_C1[ip][j]*((((K[0]*FE0_C1_D10[ip][k] + K[2]*FE0_C1_D01[ip][k]))*F5 + ((K[1]*FE0_C1_D10[ip][k] + K[3]*FE0_C1_D01[ip][k]))*F6)))) + (FE0_C0[ip][j]*((FE0_C0[ip][k]*((K[0]*F7 + K[2]*F8)) + FE0_C1[ip][k]*((K[1]*F7 + K[3]*F8)))) + FE0_C1[ip][j]*((FE0_C0[ip][k]*((K[0]*F9 + K[2]*F10)) + FE0_C1[ip][k]*((K[1]*F9 + K[3]*F10)))))) + ((((K[0]*FE0_C0_D10[ip][j] + K[2]*FE0_C0_D01[ip][j]))*((K[0]*FE0_C0_D10[ip][k] + K[2]*FE0_C0_D01[ip][k])) + ((K[0]*FE0_C1_D10[ip][j] + K[2]*FE0_C1_D01[ip][j]))*((K[0]*FE0_C1_D10[ip][k] + K[2]*FE0_C1_D01[ip][k]))) + (((K[1]*FE0_C0_D10[ip][j] + K[3]*FE0_C0_D01[ip][j]))*((K[1]*FE0_C0_D10[ip][k] + K[3]*FE0_C0_D01[ip][k])) + ((K[1]*FE0_C1_D10[ip][j] + K[3]*FE0_C1_D01[ip][j]))*((K[1]*FE0_C1_D10[ip][k] + K[3]*FE0_C1_D01[ip][k])))))*W7[ip]*det;
        } // end loop over 'k'
      } // end loop over 'j'
    } // end loop over 'ip'
}

extern "C" DLL_EXPORT ufc::cell_integral * create_ffc_form_81eb204e861bf1e571ab148888289af245a7a254_cell_integral_main_otherwise()
{
  return new ffc_form_81eb204e861bf1e571ab148888289af245a7a254_cell_integral_main_otherwise();
}


ffc_form_81eb204e861bf1e571ab148888289af245a7a254_exterior_facet_integral_main_otherwise::ffc_form_81eb204e861bf1e571ab148888289af245a7a254_exterior_facet_integral_main_otherwise() : ufc::exterior_facet_integral()
{
    
}

ffc_form_81eb204e861bf1e571ab148888289af245a7a254_exterior_facet_integral_main_otherwise::~ffc_form_81eb204e861bf1e571ab148888289af245a7a254_exterior_facet_integral_main_otherwise()
{
    
}

const std::vector<bool> & ffc_form_81eb204e861bf1e571ab148888289af245a7a254_exterior_facet_integral_main_otherwise::enabled_coefficients() const
{
    static const std::vector<bool> enabled({true, false});
    return enabled;
}

void ffc_form_81eb204e861bf1e571ab148888289af245a7a254_exterior_facet_integral_main_otherwise::tabulate_tensor(double * A,
                                    const double * const * w,
                                    const double * coordinate_dofs,
                                    std::size_t facet,
                                    int cell_orientation) const
{
    // This function was generated using 'quadrature' representation
    // with the following integrals metadata:
    // 
    //   num_cells:         None
    //   quadrature_degree: 6
    //   quadrature_rule:   'default'
    //   representation:    'quadrature'
    // 
    // and the following integral 0 metadata:
    // 
    //   estimated_polynomial_degree: 6
    //   quadrature_degree:           6
    //   quadrature_rule:             'default'
    //   representation:              'quadrature'
    
    // Compute Jacobian
    double J[4];
    compute_jacobian_triangle_2d(J, coordinate_dofs);
    
    // Compute Jacobian inverse and determinant
    double K[4];
    double detJ;
    compute_jacobian_inverse_triangle_2d(K, detJ, J);
    
    
    
    // Get vertices on edge
    static unsigned int edge_vertices[3][2] = {{1, 2}, {0, 2}, {0, 1}};
    const unsigned int v0 = edge_vertices[facet][0];
    const unsigned int v1 = edge_vertices[facet][1];
    
    // Compute scale factor (length of edge scaled by length of reference interval)
    const double dx0 = coordinate_dofs[2*v1 + 0] - coordinate_dofs[2*v0 + 0];
    const double dx1 = coordinate_dofs[2*v1 + 1] - coordinate_dofs[2*v0 + 1];
    const double det = std::sqrt(dx0*dx0 + dx1*dx1);
    
    
    const bool direction = dx1*(coordinate_dofs[2*facet] - coordinate_dofs[2*v0]) - dx0*(coordinate_dofs[2*facet + 1] - coordinate_dofs[2*v0 + 1]) < 0;
    // Compute facet normals from the facet scale factor constants
    const double n0 = direction ? dx1 / det : -dx1 / det;
    const double n1 = direction ? -dx0 / det : dx0 / det;
    
    // Facet area
    
    // Compute cell volume
    
    
    // Compute circumradius of triangle in 2D
    
    
    // Array of quadrature weights.
    static const double W4[4] = {0.173927422568727, 0.326072577431273, 0.326072577431273, 0.173927422568727};
    // Quadrature points on the UFC reference element: (0.0694318442029737), (0.330009478207572), (0.669990521792428), (0.930568155797026)
    
    // Values of basis functions at quadrature points.
    static const double FE0_f0_C0[4][21] = \
    {{0.0, 0.801346029369931, -0.0597902822241217, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.227784076790952, -0.112196966793904, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, -0.112196966793904, 0.227784076790952, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, -0.0597902822241217, 0.801346029369931, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f0_C1[4][21] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.801346029369931, -0.0597902822241217, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.227784076790952, -0.112196966793904, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.112196966793904, 0.227784076790952, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0597902822241217, 0.801346029369931, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f1_C0[4][21] = \
    {{0.801346029369931, 0.0, -0.0597902822241217, 0.0, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.227784076790952, 0.0, -0.112196966793904, 0.0, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.112196966793904, 0.0, 0.227784076790952, 0.0, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0597902822241217, 0.0, 0.801346029369931, 0.0, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f1_C1[4][21] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.801346029369931, 0.0, -0.0597902822241217, 0.0, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.227784076790952, 0.0, -0.112196966793904, 0.0, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.112196966793904, 0.0, 0.227784076790952, 0.0, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0597902822241217, 0.0, 0.801346029369931, 0.0, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f2_C0[4][21] = \
    {{0.801346029369931, -0.0597902822241217, 0.0, 0.0, 0.0, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.227784076790952, -0.112196966793904, 0.0, 0.0, 0.0, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.112196966793904, 0.227784076790952, 0.0, 0.0, 0.0, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0597902822241217, 0.801346029369931, 0.0, 0.0, 0.0, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE0_f2_C1[4][21] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.801346029369931, -0.0597902822241217, 0.0, 0.0, 0.0, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.227784076790952, -0.112196966793904, 0.0, 0.0, 0.0, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.112196966793904, 0.227784076790952, 0.0, 0.0, 0.0, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0597902822241217, 0.801346029369931, 0.0, 0.0, 0.0, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE2_f0_C0[4][12] = \
    {{0.0, 0.801346029369931, -0.0597902822241217, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0.227784076790952, -0.112196966793904, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, -0.112196966793904, 0.227784076790952, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, -0.0597902822241217, 0.801346029369931, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE2_f0_C1[4][12] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.801346029369931, -0.0597902822241217, 0.258444252854191, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.227784076790952, -0.112196966793904, 0.884412890002952, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.112196966793904, 0.227784076790952, 0.884412890002952, 0.0, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0597902822241217, 0.801346029369931, 0.258444252854191, 0.0, 0.0}};
    
    static const double FE2_f1_C0[4][12] = \
    {{0.801346029369931, 0.0, -0.0597902822241217, 0.0, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.227784076790952, 0.0, -0.112196966793904, 0.0, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.112196966793904, 0.0, 0.227784076790952, 0.0, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0597902822241217, 0.0, 0.801346029369931, 0.0, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE2_f1_C1[4][12] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.801346029369931, 0.0, -0.0597902822241217, 0.0, 0.258444252854191, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.227784076790952, 0.0, -0.112196966793904, 0.0, 0.884412890002952, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.112196966793904, 0.0, 0.227784076790952, 0.0, 0.884412890002952, 0.0},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0597902822241217, 0.0, 0.801346029369931, 0.0, 0.258444252854191, 0.0}};
    
    static const double FE2_f2_C0[4][12] = \
    {{0.801346029369931, -0.0597902822241217, 0.0, 0.0, 0.0, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.227784076790952, -0.112196966793904, 0.0, 0.0, 0.0, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.112196966793904, 0.227784076790952, 0.0, 0.0, 0.0, 0.884412890002952, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {-0.0597902822241217, 0.801346029369931, 0.0, 0.0, 0.0, 0.258444252854191, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0}};
    
    static const double FE2_f2_C1[4][12] = \
    {{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.801346029369931, -0.0597902822241217, 0.0, 0.0, 0.0, 0.258444252854191},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.227784076790952, -0.112196966793904, 0.0, 0.0, 0.0, 0.884412890002952},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.112196966793904, 0.227784076790952, 0.0, 0.0, 0.0, 0.884412890002952},
    {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0597902822241217, 0.801346029369931, 0.0, 0.0, 0.0, 0.258444252854191}};
    
    // Reset values in the element tensor.
    for (unsigned int r = 0; r < 441; r++)
    {
      A[r] = 0.0;
    } // end loop over 'r'
    
    // Compute element tensor using UFL quadrature representation
    // Optimisations: ('eliminate zeros', False), ('ignore ones', False), ('ignore zero tables', False), ('optimisation', False), ('remove zero terms', False)
    switch (facet)
    {
    case 0:
      {
        // Total number of operations to compute element tensor (from this point): 39000
      
      // Loop quadrature points for integral.
      // Number of operations to compute element tensor for following IP loop = 39000
      for (unsigned int ip = 0; ip < 4; ip++)
      {
        
        // Coefficient declarations.
        double F0 = 0.0;
        double F1 = 0.0;
        
        // Total number of operations to compute function values = 48
        for (unsigned int r = 0; r < 12; r++)
        {
          F0 += FE2_f0_C0[ip][r]*w[0][r];
          F1 += FE2_f0_C1[ip][r]*w[0][r];
        } // end loop over 'r'
        
        // Number of operations for primary indices: 9702
        for (unsigned int j = 0; j < 21; j++)
        {
          for (unsigned int k = 0; k < 21; k++)
          {
            // Number of operations to compute entry: 22
            A[j*21 + k] += (((((FE0_f0_C0[ip][k]*n0 + FE0_f0_C1[ip][k]*n1))*0.5)*((FE0_f0_C0[ip][j]*F0 + FE0_f0_C1[ip][j]*F1)))*(-1.0) + (((FE0_f0_C0[ip][j]*FE0_f0_C0[ip][k] + FE0_f0_C1[ip][j]*FE0_f0_C1[ip][k]))*(0.5*((n0*F0 + n1*F1))))*(-1.0))*W4[ip]*det;
          } // end loop over 'k'
        } // end loop over 'j'
      } // end loop over 'ip'
        break;
      }
    case 1:
      {
        // Total number of operations to compute element tensor (from this point): 39000
      
      // Loop quadrature points for integral.
      // Number of operations to compute element tensor for following IP loop = 39000
      for (unsigned int ip = 0; ip < 4; ip++)
      {
        
        // Coefficient declarations.
        double F0 = 0.0;
        double F1 = 0.0;
        
        // Total number of operations to compute function values = 48
        for (unsigned int r = 0; r < 12; r++)
        {
          F0 += FE2_f1_C0[ip][r]*w[0][r];
          F1 += FE2_f1_C1[ip][r]*w[0][r];
        } // end loop over 'r'
        
        // Number of operations for primary indices: 9702
        for (unsigned int j = 0; j < 21; j++)
        {
          for (unsigned int k = 0; k < 21; k++)
          {
            // Number of operations to compute entry: 22
            A[j*21 + k] += (((((FE0_f1_C0[ip][k]*n0 + FE0_f1_C1[ip][k]*n1))*0.5)*((FE0_f1_C0[ip][j]*F0 + FE0_f1_C1[ip][j]*F1)))*(-1.0) + (((FE0_f1_C0[ip][j]*FE0_f1_C0[ip][k] + FE0_f1_C1[ip][j]*FE0_f1_C1[ip][k]))*(0.5*((n0*F0 + n1*F1))))*(-1.0))*W4[ip]*det;
          } // end loop over 'k'
        } // end loop over 'j'
      } // end loop over 'ip'
        break;
      }
    case 2:
      {
        // Total number of operations to compute element tensor (from this point): 39000
      
      // Loop quadrature points for integral.
      // Number of operations to compute element tensor for following IP loop = 39000
      for (unsigned int ip = 0; ip < 4; ip++)
      {
        
        // Coefficient declarations.
        double F0 = 0.0;
        double F1 = 0.0;
        
        // Total number of operations to compute function values = 48
        for (unsigned int r = 0; r < 12; r++)
        {
          F0 += FE2_f2_C0[ip][r]*w[0][r];
          F1 += FE2_f2_C1[ip][r]*w[0][r];
        } // end loop over 'r'
        
        // Number of operations for primary indices: 9702
        for (unsigned int j = 0; j < 21; j++)
        {
          for (unsigned int k = 0; k < 21; k++)
          {
            // Number of operations to compute entry: 22
            A[j*21 + k] += (((((FE0_f2_C0[ip][k]*n0 + FE0_f2_C1[ip][k]*n1))*0.5)*((FE0_f2_C0[ip][j]*F0 + FE0_f2_C1[ip][j]*F1)))*(-1.0) + (((FE0_f2_C0[ip][j]*FE0_f2_C0[ip][k] + FE0_f2_C1[ip][j]*FE0_f2_C1[ip][k]))*(0.5*((n0*F0 + n1*F1))))*(-1.0))*W4[ip]*det;
          } // end loop over 'k'
        } // end loop over 'j'
      } // end loop over 'ip'
        break;
      }
    }
    
}

extern "C" DLL_EXPORT ufc::exterior_facet_integral * create_ffc_form_81eb204e861bf1e571ab148888289af245a7a254_exterior_facet_integral_main_otherwise()
{
  return new ffc_form_81eb204e861bf1e571ab148888289af245a7a254_exterior_facet_integral_main_otherwise();
}


ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main() : ufc::form()
{
    // Do nothing
}

ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::~ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main()
{
    // Do nothing
}

const char * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::signature() const
{
    return "00bfff4cf66f5e606814490ff90f495086995cf577ef184625880c550ff62816b656971b80a65294fa7d191acf4d84e6dc2dae693388bca645b27f76a07fdf75";
}

std::size_t ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::rank() const
{
    return 2;
}

std::size_t ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::num_coefficients() const
{
    return 2;
}

std::size_t ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::original_coefficient_position(std::size_t i) const
{
    static const std::vector<std::size_t> position({0, 1});
    return position[i];
}

ufc::finite_element * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_coordinate_finite_element() const
{
    return create_ffc_element_8fb97a81157753ea74ad04769eb1aebe604ce903_finite_element_main();
}

ufc::dofmap * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_coordinate_dofmap() const
{
    return create_ffc_element_8fb97a81157753ea74ad04769eb1aebe604ce903_dofmap_main();
}

ufc::coordinate_mapping * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_coordinate_mapping() const
{
    return nullptr;
}

ufc::finite_element * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_finite_element(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return create_ffc_element_0a08f213f0f7814b84ceffd6cb8a4eb644bea3d7_finite_element_main();
        break;
      }
    case 1:
      {
        return create_ffc_element_0a08f213f0f7814b84ceffd6cb8a4eb644bea3d7_finite_element_main();
        break;
      }
    case 2:
      {
        return create_ffc_element_79df4a7e74199bc8f1574fb4e4728cf962fe6307_finite_element_main();
        break;
      }
    case 3:
      {
        return create_ffc_element_1ca09c7da323f43cc9d05082aef65289352ff0a2_finite_element_main();
        break;
      }
    }
    
    return 0;
}

ufc::dofmap * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_dofmap(std::size_t i) const
{
    switch (i)
    {
    case 0:
      {
        return create_ffc_element_0a08f213f0f7814b84ceffd6cb8a4eb644bea3d7_dofmap_main();
        break;
      }
    case 1:
      {
        return create_ffc_element_0a08f213f0f7814b84ceffd6cb8a4eb644bea3d7_dofmap_main();
        break;
      }
    case 2:
      {
        return create_ffc_element_79df4a7e74199bc8f1574fb4e4728cf962fe6307_dofmap_main();
        break;
      }
    case 3:
      {
        return create_ffc_element_1ca09c7da323f43cc9d05082aef65289352ff0a2_dofmap_main();
        break;
      }
    }
    
    return 0;
}

std::size_t ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::max_cell_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::max_exterior_facet_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::max_interior_facet_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::max_vertex_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::max_custom_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::max_cutcell_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::max_interface_subdomain_id() const
{
    return 0;
}

std::size_t ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::max_overlap_subdomain_id() const
{
    return 0;
}

bool ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::has_cell_integrals() const
{
    return true;
}

bool ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::has_exterior_facet_integrals() const
{
    return true;
}

bool ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::has_interior_facet_integrals() const
{
    return false;
}

bool ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::has_vertex_integrals() const
{
    return false;
}

bool ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::has_custom_integrals() const
{
    return false;
}

bool ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::has_cutcell_integrals() const
{
    return false;
}

bool ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::has_interface_integrals() const
{
    return false;
}

bool ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::has_overlap_integrals() const
{
    return false;
}

ufc::cell_integral * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_cell_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::exterior_facet_integral * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_exterior_facet_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::interior_facet_integral * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_interior_facet_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::vertex_integral * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_vertex_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::custom_integral * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_custom_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::cutcell_integral * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_cutcell_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::interface_integral * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_interface_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::overlap_integral * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_overlap_integral(std::size_t subdomain_id) const
{
    return 0;
}

ufc::cell_integral * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_default_cell_integral() const
{
    return new ffc_form_81eb204e861bf1e571ab148888289af245a7a254_cell_integral_main_otherwise();
}

ufc::exterior_facet_integral * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_default_exterior_facet_integral() const
{
    return new ffc_form_81eb204e861bf1e571ab148888289af245a7a254_exterior_facet_integral_main_otherwise();
}

ufc::interior_facet_integral * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_default_interior_facet_integral() const
{
    return 0;
}

ufc::vertex_integral * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_default_vertex_integral() const
{
    return 0;
}

ufc::custom_integral * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_default_custom_integral() const
{
    return 0;
}

ufc::cutcell_integral * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_default_cutcell_integral() const
{
    return 0;
}

ufc::interface_integral * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_default_interface_integral() const
{
    return 0;
}

ufc::overlap_integral * ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main::create_default_overlap_integral() const
{
    return 0;
}

extern "C" DLL_EXPORT ufc::form * create_ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main()
{
  return new ffc_form_81eb204e861bf1e571ab148888289af245a7a254_form_main();
}

