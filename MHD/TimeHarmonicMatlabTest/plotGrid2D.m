 function plotGrid2D(x,y,varargin);%function plotgrid(x,y,varargin);%JM-12-12-01  %plotgrid(u,v,'col','r','knots','off',linewidth',2,'markersize',20',gridx',m,'gridy',n)      [m,n] = size(x);  [col,varargin]         = getopt('col','r',varargin{:});  [knots,varargin]       = getopt('knots','on',varargin{:});  [linewidth,varargin]   = getopt('linewidth',2,varargin{:});  [linestyle,varargin]   = getopt('linestyle','-',varargin{:});  [markersize,varargin]  = getopt('markersize',20,varargin{:});  [gridx,varargin]       = getopt('gridx',m,varargin{:});  [gridy,varargin]       = getopt('gridy',n,varargin{:});  [displacement,varargin] = getopt('displacement',0,varargin{:});  if displacement & ~strcmp(displacement,'off'),    [xx,yy]=ndgrid(1:m,1:n);    x = xx+x;    y = yy+y;  end;    if isint(m/gridx),    I = 1:m/gridx:m;  else    I=round(linspace(1,m,min(m,gridx)));  end;  if isint(n/gridy),    J = 1:n/gridy:n;  else    J=round(linspace(1,n,min(n,gridy)));  end;      for i=I,     plot(y(i,J(1):J(end)),x(i,J(1):J(end)),...	    linestyle,'linewidth',linewidth,'color',col); hold on;  end;  for j=J,     plot(y(I(1):I(end),j),x(I(1):I(end),j),...	       linestyle,'linewidth',linewidth,'color',col); hold on;  end;  if strcmp(knots,'on'),    plot(reshape(y(I,J),length(I)*length(J),1),...         reshape(x(I,J),length(I)*length(J),1), ...	       '.','markersize',markersize,'color',col);  end;return;% ----------------------------------------------------------------function ok = isint(x)  ok = (abs(x-round(x))<1e-15);return;%----------------------------------------------------------------- function [erg,arg] = getopt(str,default,varargin)%function [erg,arg] = getopt(str,default,varargin)% JM: 2004/02/25% [var,varargin] = getopt(var,default,varargin{:});% sets erg -> default, % if str = varargin{j}, erg = varargin{j+1}, varargin{j,j+1} = {};erg = default;arg = varargin;j   = max(find(strcmp(varargin,str)));if ~isempty(j),  erg = varargin{j+1};  if j == length(varargin),    arg = {varargin{1:j-1}};  else    arg = {varargin{1:j-1},varargin{j+2:end}};  end;end;return;%-------------------------------------------------------------------